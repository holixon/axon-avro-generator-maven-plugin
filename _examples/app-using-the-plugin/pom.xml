<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.holixon.axon.avro.examples</groupId>
    <artifactId>_examples</artifactId>
    <version>0.0.3-SNAPSHOT</version>
  </parent>

  <artifactId>app-using-the-plugin</artifactId>

  <properties>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <kotlin.version>1.6.20</kotlin.version>

    <!-- SCHEMA DEFINITIONS -->
    <schema-global.version>${project.version}</schema-global.version>
    <schema-service.version>${project.version}</schema-service.version>

    <jmolecules.version>1.6.0</jmolecules.version>

    <!-- TEST -->
    <kotlin-logging.version>2.1.21</kotlin-logging.version>
    <junit5.version>5.8.2</junit5.version>
    <mockito.version>4.0.0</mockito.version>
    <assertj.version>3.22.0</assertj.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit5.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- KOTLIN -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>1.11.3</version>
    </dependency>

    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-messaging</artifactId>
      <version>4.5.8</version>
    </dependency>

    <!-- include dependencies to force compilation order -->
    <!-- not required for actual execution -->
    <dependency>
      <groupId>io.holixon.axon.avro.examples</groupId>
      <artifactId>schema-service</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.holixon.axon.avro.examples</groupId>
      <artifactId>schema-global</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- runtime dependencies on jmolecules -->
    <dependency>
      <groupId>org.jmolecules</groupId>
      <artifactId>jmolecules-ddd</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jmolecules</groupId>
      <artifactId>jmolecules-cqrs-architecture</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jmolecules</groupId>
      <artifactId>jmolecules-events</artifactId>
    </dependency>

    <!-- TEST -->
    <dependency>
      <groupId>org.mockito.kotlin</groupId>
      <artifactId>mockito-kotlin</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test-junit5</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>clean package</defaultGoal>
    <resources>
      <!-- ignore gitkeep marker files -->
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>.gitkeep</exclude>
        </excludes>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <!-- cleaning -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <!-- java compiler -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.10.1</version>
          <configuration>
            <encoding>UTF-8</encoding>
            <release>${java.version}</release>
          </configuration>
          <executions>
            <!-- Replacing default-compile as it is treated specially by maven -->
            <execution>
              <id>default-compile</id>
              <phase>none</phase>
            </execution>
            <!-- Replacing default-testCompile as it is treated specially by maven -->
            <execution>
              <id>default-testCompile</id>
              <phase>none</phase>
            </execution>
            <execution>
              <id>java-compile</id>
              <phase>compile</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>java-test-compile</id>
              <phase>test-compile</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- kotlin compiler -->
        <plugin>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>kotlin-maven-plugin</artifactId>
          <version>${kotlin.version}</version>
          <configuration>
            <jvmTarget>${java.version}</jvmTarget>
            <compilerPlugins>
              <!--<plugin>spring</plugin>-->
              <!--plugin>jpa</plugin-->
              <plugin>no-arg</plugin>
              <plugin>all-open</plugin>
            </compilerPlugins>
            <pluginOptions>
              <!-- Each annotation is placed on its own line -->
              <!--  <option>all-open:annotation=com.tngtech.jgiven.integration.spring.JGivenStage</option> -->
            </pluginOptions>
          </configuration>

          <executions>
            <execution>
              <id>compile</id>
              <goals>
                <goal>compile</goal>
              </goals>
              <configuration>
                <sourceDirs>
                  <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                </sourceDirs>
              </configuration>
            </execution>
            <execution>
              <id>test-compile</id>
              <goals>
                <goal>test-compile</goal>
              </goals>
              <configuration>
                <sourceDirs>
                  <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                  <sourceDir>${project.basedir}/src/test/java</sourceDir>
                </sourceDirs>
              </configuration>
            </execution>
          </executions>

          <dependencies>
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-allopen</artifactId>
              <version>${kotlin.version}</version>
            </dependency>
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-noarg</artifactId>
              <version>${kotlin.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- resources -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
      </plugin>
      <plugin>
        <groupId>io.holixon.axon.avro.maven</groupId>
        <artifactId>axon-avro-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-classes-from-avro</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate-classes-from-schema</goal>
            </goals>
            <configuration>
              <debug>true</debug>
              <localSchemaDirectory>${project.basedir}/src/main/avro</localSchemaDirectory>
              <schemaArtifacts>
                <artifact>io.holixon.axon.avro.examples:schema-service:${schema-global.version}</artifact>
                <artifact>io.holixon.axon.avro.examples:schema-global:${schema-service.version}</artifact>
              </schemaArtifacts>
              <includeSchemas>
                <schema>io.holixon.schema.bank.event.BankAccountCreatedEvent</schema>
              </includeSchemas>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
